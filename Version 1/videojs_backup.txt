          sortedMilestones.forEach((milestone, index) => {
            const milestoneElement = document.createElement("div");
            milestoneElement.classList.add("milestone_navigation");

            const lecture = milestone.lecture;

            const moduleKey = `module_${moduleId}`;

            if (lecture.attachments && lecture.attachments.length > 0) {
              lecture.attachments.forEach((attachment) => {
                const attachmentInfo = document.createElement("div");
                attachmentInfo.classList.add("attachment_info");

                let label = "";
                let icon = "";

                if (attachment.kind === "quiz") {
                  label = "Practice Questions";
                  icon = "<i class='bx bx-book'></i>";
                  // Get the position from the lecture object
                  attachment.position = lecture.position;

                  // attachmentInfo.classList.add("locked"); // Apply fading and disable pointer events

                  setTimeout(() => {
                    attachmentInfo.classList.remove("locked");
                  }, 600000); //

                  // Load attachment state from localStorage
                  const attachmentStateKey = `${moduleKey}`;
                  // const savedAttachmentState =
                  //   localStorage.getItem(attachmentStateKey);

                  // if (savedAttachmentState === "opened") {
                  //   attachmentInfo.classList.remove("locked"); // Unlock opened attachments
                  // }

                  // Add click event listener for quiz attachment
                  attachmentInfo.addEventListener("click", () => {
                    const courseId = urlParams.get("courseid");
                    const moduleId = urlParams.get("moduleid");
                    const teachable_course_id = urlParams.get("teachableid");
                    const quizId = attachment.id; // Assuming the attachment has an ID property
                    localStorage.setItem(attachmentStateKey, "opened");

                    const quizUrl = `quiz.html?courseid=${courseId}&teachableid=${teachable_course_id}&moduleid=${moduleId}&quizid=${quizId}`;
                    window.location.href = quizUrl; // Navigate to the constructed quiz URL
                  });
                } else if (attachment.kind === "video") {
                  label = "Video";
                  icon = "<i class='bx bx-play'></i>";

                  // Load attachment state from localStorage
                  const attachmentStateKey = `${moduleKey}`;
                  const savedAttachmentState =
                    localStorage.getItem(attachmentStateKey);

                  if (savedAttachmentState === "opened") {
                    // attachmentInfo.classList.remove("locked"); // Unlock opened attachments
                    icon = "<i class='bx bx-check-circle'></i>";
                  }

                  // Add click event listener for video attachment
                  attachmentInfo.addEventListener("click", () => {
                    pdfContainer.style.display = "none";
                    videoPlayer.style.display = "block";
                    tooltip.style.display = "none";

                    const videoUrl = attachment.url;

                    const sourceMp4 = videoPlayer.querySelector(
                      "source[type='video/mp4']"
                    );
                    const sourceWebm = videoPlayer.querySelector(
                      "source[type='video/webm']"
                    );
                    sourceMp4.setAttribute("src", videoUrl);
                    sourceWebm.setAttribute("src", videoUrl);

                    videoPlayer.load();
                    videoPlayer.play();

                    // Set the videoClicked variable to true
                    videoClicked = true;

                    // Change the icon after 8 seconds
                    setTimeout(() => {
                      if (videoClicked) {
                        localStorage.setItem(attachmentStateKey, "opened");
                        icon = "<i class='bx bx-check-circle'></i>";
                        attachmentInfo.innerHTML = `
                      ${icon}
                      <div>
                        <span><b>${label}: ${capitalizedLectureName}</b></span>
                        <p>Module Content: ${lecturePosition}</p>
                      </div>
                    `;
                      }
                    }, 180000);
                    // Listen for time updates while the video is playing
                    videoPlayer.addEventListener("timeupdate", () => {
                      // Save the current progress in local storage
                      localStorage.setItem(
                        savedProgressKey,
                        videoPlayer.currentTime
                      );
                    });
                  });
                  // Restore saved video progress if available
                  const savedProgressKey = `video_progress_${courseId}_${moduleId}_${lecture.position}`;
                  const savedProgress = localStorage.getItem(savedProgressKey);

                  if (savedProgress) {
                    // Update the video progress to the saved value
                    videoPlayer.currentTime = parseFloat(savedProgress);
                  }
                } else if (attachment.kind === "pdf_embed") {
                  label = "PDF";
                  icon = "<i class='bx bx-file'></i>";

                  // Load attachment state from localStorage
                  const attachmentStateKey = `${moduleKey}`;
                  const savedAttachmentState =
                    localStorage.getItem(attachmentStateKey);

                  if (savedAttachmentState === "opened") {
                    icon = "<i class='bx bx-check-circle'></i>";
                    attachmentInfo.classList.remove("locked"); // Unlock opened attachments
                  } else {
                    // attachmentInfo.classList.add("locked"); // Apply fading and disable pointer events
                  }

                  // Remove faded and disabled classes
                  setTimeout(() => {
                    attachmentInfo.classList.remove("locked");
                  }, 300000);

                  attachmentInfo.addEventListener("click", () => {
                    videoPlayer.style.display = "none";
                    videoPlayer.pause();
                    pdfContainer.style.display = "block";
                    tooltip.style.display = "none";

                    const pdfUrl = attachment.url;

                    const objectTag = pdfContainer.querySelector("object");
                    const iframeTag = pdfContainer.querySelector("iframe");
                    objectTag.setAttribute("data", pdfUrl);
                    iframeTag.setAttribute("src", pdfUrl);

                    // Set the pdfClicked variable to true
                    pdfClicked = true;

                    // Change the icon after 5 seconds
                    setTimeout(() => {
                      if (pdfClicked) {
                        localStorage.setItem(attachmentStateKey, "opened");
                        icon = "<i class='bx bx-check-circle'></i>";
                        attachmentInfo.innerHTML = `
                          ${icon}
                          <div>
                            <span><b>${label}: ${capitalizedLectureName}</b></span>
                            <p>Module Content: ${lecturePosition}</p>
                          </div>
                        `;
                      }
                    }, 5000);
                  });
                }
                // Capitalize the first letter of each word in lecture name
                const lectureNameWords = lecture.name.split(" ");
                const lecturePosition = lecture.position;
                const capitalizedLectureName = lectureNameWords
                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
                  .join(" ");

                attachmentInfo.innerHTML = `
                  ${icon}
                  <div>
                    <span><b>${label}: ${capitalizedLectureName}</b></span>
                    <p>Module Content: ${lecturePosition}</p>
                  </div>
                `;

                milestoneElement.appendChild(attachmentInfo);
              });
            } else {
              const noAttachmentsInfo = document.createElement("p");
              noAttachmentsInfo.textContent =
                "No attachments available for this lecture.";
              milestoneElement.appendChild(noAttachmentsInfo);
            }
            milestonesContainer.appendChild(milestoneElement);
          });